=begin
#PagerDuty API

#This document describes the PagerDuty REST APIs.  For guides and examples please visit our [Documentation.](https://developer.pagerduty.com/docs/get-started/getting-started/)  Our REST APIs are defined in OpenAPI v3.x. You can view the schema at [github.com/PagerDuty/api-schema](https://github.com/PagerDuty/api-schema).  Note that properties in some schemas have fields not shown by default such as `readOnly`, `format`, and `default`. Hover your cursor over the right column that looks like `optional+1` to see the full list of fields. 

The version of the OpenAPI document: 2.0.0
Contact: support@pagerduty.com
Generated by: https://openapi-generator.tech
Generator version: 7.6.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::EscalationPoliciesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'EscalationPoliciesApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::EscalationPoliciesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of EscalationPoliciesApi' do
    it 'should create an instance of EscalationPoliciesApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::EscalationPoliciesApi)
    end
  end

  # unit tests for create_escalation_policy
  # Create an escalation policy
  # Creates a new escalation policy. At least one escalation rule must be provided.  Escalation policies define which user should be alerted at which time.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#escalation-policies)  Scoped OAuth requires: &#x60;escalation_policies.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :from The email address of a valid user associated with the account making the request. This is optional, and is only used for change tracking.
  # @option opts [CreateEscalationPolicyRequest] :create_escalation_policy_request The escalation policy to be created.
  # @return [CreateEscalationPolicyRequest]
  describe 'create_escalation_policy test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_escalation_policy
  # Delete an escalation policy
  # Deletes an existing escalation policy and rules. The escalation policy must not be in use by any services.  Escalation policies define which user should be alerted at which time.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#escalation-policies)  Scoped OAuth requires: &#x60;escalation_policies.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_escalation_policy test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_escalation_policy
  # Get an escalation policy
  # Get information about an existing escalation policy and its rules.  Escalation policies define which user should be alerted at which time.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#escalation-policies)  Scoped OAuth requires: &#x60;escalation_policies.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :include Array of additional Models to include in response.
  # @return [CreateEscalationPolicyRequest]
  describe 'get_escalation_policy test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_escalation_policies
  # List escalation policies
  # List all of the existing escalation policies.  Escalation policies define which user should be alerted at which time.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#escalation-policies)  Scoped OAuth requires: &#x60;escalation_policies.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of results per page.
  # @option opts [Integer] :offset Offset to start pagination search results.
  # @option opts [Boolean] :total By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information. 
  # @option opts [String] :query Filters the result, showing only the records whose name matches the query.
  # @option opts [Array<String>] :user_ids Filters the results, showing only escalation policies on which any of the users is a target.
  # @option opts [Array<String>] :team_ids An array of team IDs. Only results related to these teams will be returned. Account must have the &#x60;teams&#x60; ability to use this parameter.
  # @option opts [String] :include Array of additional Models to include in response.
  # @option opts [String] :sort_by Used to specify the field you wish to sort the results on.
  # @return [ListEscalationPolicies200Response]
  describe 'list_escalation_policies test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_escalation_policy_audit_records
  # List audit records for an escalation policy
  # The returned records are sorted by the &#x60;execution_time&#x60; from newest to oldest.  See [&#x60;Cursor-based pagination&#x60;](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for instructions on how to paginate through the result set.  For more information see the [Audit API Document](https://developer.pagerduty.com/docs/rest-api-v2/audit-records-api/).  Scoped OAuth requires: &#x60;audit_records.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The minimum of the &#x60;limit&#x60; parameter used in the request or the maximum request size of the API.
  # @option opts [String] :cursor Optional parameter used to request the \&quot;next\&quot; set of results from an API.  The value provided here is most commonly obtained from the &#x60;next_cursor&#x60; field of the previous request.  When no value is provided, the request starts at the beginning of the result set. 
  # @option opts [Time] :since The start of the date range over which you want to search. If not specified, defaults to &#x60;now() - 24 hours&#x60; (past 24 hours)
  # @option opts [Time] :_until The end of the date range over which you want to search. If not specified, defaults to &#x60;now()&#x60;. May not be more than 31 days after &#x60;since&#x60;.
  # @return [AuditRecordResponseSchema]
  describe 'list_escalation_policy_audit_records test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_escalation_policy
  # Update an escalation policy
  # Updates an existing escalation policy and rules.  Escalation policies define which user should be alerted at which time.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#escalation-policies)  Scoped OAuth requires: &#x60;escalation_policies.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateEscalationPolicyRequest] :create_escalation_policy_request The escalation policy to be updated.
  # @return [CreateEscalationPolicyRequest]
  describe 'update_escalation_policy test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
