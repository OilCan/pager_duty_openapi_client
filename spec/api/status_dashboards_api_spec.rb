=begin
#PagerDuty API

#This document describes the PagerDuty REST APIs.  For guides and examples please visit our [Documentation.](https://developer.pagerduty.com/docs/get-started/getting-started/)  Our REST APIs are defined in OpenAPI v3.x. You can view the schema at [github.com/PagerDuty/api-schema](https://github.com/PagerDuty/api-schema).  Note that properties in some schemas have fields not shown by default such as `readOnly`, `format`, and `default`. Hover your cursor over the right column that looks like `optional+1` to see the full list of fields. 

The version of the OpenAPI document: 2.0.0
Contact: support@pagerduty.com
Generated by: https://openapi-generator.tech
Generator version: 7.6.0

=end

require 'spec_helper'
require 'json'

# Unit tests for PagerDutyOpenapiClient::StatusDashboardsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'StatusDashboardsApi' do
  before do
    # run before each test
    @api_instance = PagerDutyOpenapiClient::StatusDashboardsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of StatusDashboardsApi' do
    it 'should create an instance of StatusDashboardsApi' do
      expect(@api_instance).to be_instance_of(PagerDutyOpenapiClient::StatusDashboardsApi)
    end
  end

  # unit tests for get_status_dashboard_by_id
  # Get a single Status Dashboard by &#x60;id&#x60;
  # Get a Status Dashboard by its PagerDuty &#x60;id&#x60;.  Scoped OAuth requires: &#x60;status_dashboards.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @return [GetStatusDashboardById200Response]
  describe 'get_status_dashboard_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_status_dashboard_by_url_slug
  # Get a single Status Dashboard by &#x60;url_slug&#x60;
  # Get a Status Dashboard by its PagerDuty &#x60;url_slug&#x60;.  A &#x60;url_slug&#x60; is a human-readable reference for a custom Status Dashboard that may be created or changed in the UI. It will generally be a &#x60;dash-separated-string-like-this&#x60;.  Scoped OAuth requires: &#x60;status_dashboards.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param url_slug The &#x60;url_slug&#x60; for a status dashboard
  # @param [Hash] opts the optional parameters
  # @return [GetStatusDashboardById200Response]
  describe 'get_status_dashboard_by_url_slug test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_status_dashboard_service_impacts_by_id
  # Get impacted Business Services for a Status Dashboard by &#x60;id&#x60;.
  # Get impacted Business Services for a Status Dashboard by &#x60;id&#x60;  This endpoint does not return an exhaustive list of Business Services but rather provides access to the most impacted on the specified Status Dashboard up to the limit of 200.  The returned Business Services are sorted first by Impact, secondarily by most recently impacted, and finally by name.  To get Impact information about a specific Business Service on the Status Dashboard that does not appear in the Impact-sorted response, use the &#x60;ids[]&#x60; parameter on the &#x60;/business_services/impacts&#x60; endpoint.  Scoped OAuth requires: &#x60;status_dashboards.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :additional_fields Provides access to additional fields such as highest priority per business service and total impacted count
  # @return [GetBusinessServiceSupportingServiceImpacts200Response]
  describe 'get_status_dashboard_service_impacts_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_status_dashboard_service_impacts_by_url_slug
  # Get impacted Business Services for a  Status Dashboard by &#x60;url_slug&#x60;
  # Get Business Service Impacts for the Business Services on a Status Dashboard by its &#x60;url_slug&#x60;. A &#x60;url_slug&#x60; is a human-readable reference for a custom Status Dashboard that may be created or changed in the UI. It will generally be a &#x60;dash-separated-string-like-this&#x60;.  This endpoint does not return an exhaustive list of Business Services but rather provides access to the most impacted on the Status Dashboard up to the limit of 200.  The returned Business Services are sorted first by Impact, secondarily by most recently impacted, and finally by name.  To get impact information about a specific Business Service on the Status Dashboard that does not appear in the Impact-sored response, use the &#x60;ids[]&#x60; parameter on the &#x60;/business_services/impacts&#x60; endpoint.  Scoped OAuth requires: &#x60;status_dashboards.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param url_slug The &#x60;url_slug&#x60; for a status dashboard
  # @param [Hash] opts the optional parameters
  # @option opts [String] :additional_fields Provides access to additional fields such as highest priority per business service and total impacted count
  # @return [GetBusinessServiceSupportingServiceImpacts200Response]
  describe 'get_status_dashboard_service_impacts_by_url_slug test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_status_dashboards
  # List Status Dashboards
  # Get all your account&#39;s custom Status Dashboard views.  Scoped OAuth requires: &#x60;status_dashboards.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param [Hash] opts the optional parameters
  # @return [ListStatusDashboards200Response]
  describe 'list_status_dashboards test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
