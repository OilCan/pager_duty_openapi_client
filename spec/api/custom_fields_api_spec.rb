=begin
#PagerDuty API

#This document describes the PagerDuty REST APIs.  For guides and examples please visit our [Documentation.](https://developer.pagerduty.com/docs/get-started/getting-started/)  Our REST APIs are defined in OpenAPI v3.x. You can view the schema at [github.com/PagerDuty/api-schema](https://github.com/PagerDuty/api-schema).  Note that properties in some schemas have fields not shown by default such as `readOnly`, `format`, and `default`. Hover your cursor over the right column that looks like `optional+1` to see the full list of fields. 

The version of the OpenAPI document: 2.0.0
Contact: support@pagerduty.com
Generated by: https://openapi-generator.tech
Generator version: 7.6.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::CustomFieldsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CustomFieldsApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::CustomFieldsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CustomFieldsApi' do
    it 'should create an instance of CustomFieldsApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::CustomFieldsApi)
    end
  end

  # unit tests for create_custom_fields_field
  # Create a Field
  # Create a new Field, along with the Field Options if provided. An account may have up to 10 Fields.  Scoped OAuth requires: &#x60;custom_fields.write&#x60; 
  # @param [Hash] opts the optional parameters
  # @option opts [CreateCustomFieldsFieldRequest] :create_custom_fields_field_request 
  # @return [CreateCustomFieldsFieldRequest]
  describe 'create_custom_fields_field test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_custom_fields_field_option
  # Create a Field Option
  # Create a new Field Option. Field Options may only be created for Fields that have &#x60;field_options&#x60;. A Field may have no more than 10 enabled options.  Scoped OAuth requires: &#x60;custom_fields.write&#x60; 
  # @param field_id The ID of the field.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateCustomFieldsFieldOptionRequest] :create_custom_fields_field_option_request 
  # @return [CreateCustomFieldsFieldOptionRequest]
  describe 'create_custom_fields_field_option test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_custom_fields_field
  # Delete a Field
  # Delete a Field. Fields may not be deleted if they are used by a Field Schema.  Scoped OAuth requires: &#x60;custom_fields.write&#x60; 
  # @param field_id The ID of the field.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_custom_fields_field test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_custom_fields_field_option
  # Delete a Field Option
  # Delete a Field Option.  Scoped OAuth requires: &#x60;custom_fields.write&#x60; 
  # @param field_id The ID of the field.
  # @param field_option_id The ID of the field option.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_custom_fields_field_option test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_custom_fields_field
  # Get a Field
  # Show detailed information about a field.  Scoped OAuth requires: &#x60;custom_fields.read&#x60; 
  # @param field_id The ID of the field.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :include Array of additional details to include.
  # @return [CreateCustomFieldsFieldRequest]
  describe 'get_custom_fields_field test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_custom_fields_field_options
  # List Field Options
  # List all enabled Field Options for a Field.  Scoped OAuth requires: &#x60;custom_fields.read&#x60; 
  # @param field_id The ID of the field.
  # @param [Hash] opts the optional parameters
  # @return [ListCustomFieldsFieldOptions200Response]
  describe 'list_custom_fields_field_options test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_custom_fields_fields
  # List Fields
  # List fields.  Scoped OAuth requires: &#x60;custom_fields.read&#x60; 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :include Array of additional details to include.
  # @return [ListCustomFieldsFields200Response]
  describe 'list_custom_fields_fields test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_custom_fields_field
  # Update a Field
  # Update a field.  Scoped OAuth requires: &#x60;custom_fields.write&#x60; 
  # @param field_id The ID of the field.
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateCustomFieldsFieldRequest] :update_custom_fields_field_request 
  # @return [UpdateCustomFieldsField200Response]
  describe 'update_custom_fields_field test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_custom_fields_field_option
  # Update a Field Option
  # Update Field Option for a Field.  Scoped OAuth requires: &#x60;custom_fields.write&#x60; 
  # @param field_id The ID of the field.
  # @param field_option_id The ID of the field option.
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateCustomFieldsFieldOptionRequest] :update_custom_fields_field_option_request 
  # @return [CreateCustomFieldsFieldOptionRequest]
  describe 'update_custom_fields_field_option test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
