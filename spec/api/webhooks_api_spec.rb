=begin
#PagerDuty API

#This document describes the PagerDuty REST APIs.  For guides and examples please visit our [Documentation.](https://developer.pagerduty.com/docs/get-started/getting-started/)  Our REST APIs are defined in OpenAPI v3.x. You can view the schema at [github.com/PagerDuty/api-schema](https://github.com/PagerDuty/api-schema).  Note that properties in some schemas have fields not shown by default such as `readOnly`, `format`, and `default`. Hover your cursor over the right column that looks like `optional+1` to see the full list of fields. 

The version of the OpenAPI document: 2.0.0
Contact: support@pagerduty.com
Generated by: https://openapi-generator.tech
Generator version: 7.6.0

=end

require 'spec_helper'
require 'json'

# Unit tests for PagerDutyOpenapiClient::WebhooksApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'WebhooksApi' do
  before do
    # run before each test
    @api_instance = PagerDutyOpenapiClient::WebhooksApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of WebhooksApi' do
    it 'should create an instance of WebhooksApi' do
      expect(@api_instance).to be_instance_of(PagerDutyOpenapiClient::WebhooksApi)
    end
  end

  # unit tests for create_webhook_subscription
  # Create a webhook subscription
  # Creates a new webhook subscription.  For more information on webhook subscriptions and how they are used to configure v3 webhooks see the [Webhooks v3 Developer Documentation](https://developer.pagerduty.com/docs/webhooks/v3-overview/).  Scoped OAuth requires: &#x60;webhook_subscriptions.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [CreateWebhookSubscriptionRequest] :create_webhook_subscription_request 
  # @return [CreateWebhookSubscriptionRequest]
  describe 'create_webhook_subscription test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_webhook_subscription
  # Delete a webhook subscription
  # Deletes a webhook subscription.  Scoped OAuth requires: &#x60;webhook_subscriptions.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_webhook_subscription test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for enable_webhook_subscription
  # Enable a webhook subscription
  # Enable a webhook subscription that is temporarily disabled. (This API does not require a request body.)  Webhook subscriptions can become temporarily disabled when the subscription&#39;s delivery method is repeatedly rejected by the server.  Scoped OAuth requires: &#x60;webhook_subscriptions.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @return [CreateWebhookSubscriptionRequest]
  describe 'enable_webhook_subscription test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_webhook_subscription
  # Get a webhook subscription
  # Gets details about an existing webhook subscription.  Scoped OAuth requires: &#x60;webhook_subscriptions.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @return [CreateWebhookSubscriptionRequest]
  describe 'get_webhook_subscription test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_webhook_subscriptions
  # List webhook subscriptions
  # List existing webhook subscriptions.  The &#x60;filter_type&#x60; and &#x60;filter_id&#x60; query parameters may be used to only show subscriptions for a particular _service_ or _team_.  For more information on webhook subscriptions and how they are used to configure v3 webhooks see the [Webhooks v3 Developer Documentation](https://developer.pagerduty.com/docs/webhooks/v3-overview/).  Scoped OAuth requires: &#x60;webhook_subscriptions.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of results per page.
  # @option opts [Integer] :offset Offset to start pagination search results.
  # @option opts [Boolean] :total By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information. 
  # @option opts [String] :filter_type The type of resource to filter upon.
  # @option opts [String] :filter_id The id of the resource to filter upon.
  # @return [ListWebhookSubscriptions200Response]
  describe 'list_webhook_subscriptions test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for test_webhook_subscription
  # Test a webhook subscription
  # Test a webhook subscription.  Fires a test event against the webhook subscription.  If properly configured, this will deliver the &#x60;pagey.ping&#x60; webhook event to the destination.  Scoped OAuth requires: &#x60;webhook_subscriptions.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'test_webhook_subscription test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_webhook_subscription
  # Update a webhook subscription
  # Updates an existing webhook subscription.  Only the fields being updated need to be included on the request.  This operation does not support updating the &#x60;delivery_method&#x60; of the webhook subscription.  Scoped OAuth requires: &#x60;webhook_subscriptions.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @option opts [WebhookSubscriptionUpdate] :webhook_subscription_update 
  # @return [CreateWebhookSubscriptionRequest]
  describe 'update_webhook_subscription test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
