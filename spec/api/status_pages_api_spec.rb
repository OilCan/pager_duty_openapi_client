=begin
#PagerDuty API

#This document describes the PagerDuty REST APIs.  For guides and examples please visit our [Documentation.](https://developer.pagerduty.com/docs/get-started/getting-started/)  Our REST APIs are defined in OpenAPI v3.x. You can view the schema at [github.com/PagerDuty/api-schema](https://github.com/PagerDuty/api-schema).  Note that properties in some schemas have fields not shown by default such as `readOnly`, `format`, and `default`. Hover your cursor over the right column that looks like `optional+1` to see the full list of fields. 

The version of the OpenAPI document: 2.0.0
Contact: support@pagerduty.com
Generated by: https://openapi-generator.tech
Generator version: 7.6.0

=end

require 'spec_helper'
require 'json'

# Unit tests for PagerDutyOpenapiClient::StatusPagesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'StatusPagesApi' do
  before do
    # run before each test
    @api_instance = PagerDutyOpenapiClient::StatusPagesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of StatusPagesApi' do
    it 'should create an instance of StatusPagesApi' do
      expect(@api_instance).to be_instance_of(PagerDutyOpenapiClient::StatusPagesApi)
    end
  end

  # unit tests for create_status_page_post
  # Create a Status Page Post
  # Create a Post for a Status Page by Status Page ID.  Scoped OAuth requires: &#x60;status_pages.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateStatusPagePostRequest] :create_status_page_post_request 
  # @return [CreateStatusPagePost201Response]
  describe 'create_status_page_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_status_page_post_update
  # Create a Status Page Post Update
  # Create a Post Update for a Post by Post ID.  Scoped OAuth requires: &#x60;status_pages.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param post_id The ID of the Status Page Post.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateStatusPagePostUpdateRequest] :create_status_page_post_update_request 
  # @return [CreateStatusPagePostUpdate201Response]
  describe 'create_status_page_post_update test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_status_page_postmortem
  # Create a Post Postmortem
  # Create a Postmortem for a Post by Post ID.  Scoped OAuth requires: &#x60;status_pages.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param post_id The ID of the Status Page Post.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateStatusPagePostmortemRequest] :create_status_page_postmortem_request 
  # @return [GetPostmortem200Response]
  describe 'create_status_page_postmortem test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_status_page_subscription
  # Create a Status Page Subscription
  # Create a Subscription for a Status Page by Status Page ID.  Scoped OAuth requires: &#x60;status_pages.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateStatusPageSubscriptionRequest] :create_status_page_subscription_request 
  # @return [CreateStatusPageSubscription201Response]
  describe 'create_status_page_subscription test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_status_page_post
  # Delete a Status Page Post
  # Delete a Post for a Status Page by Status Page ID and Post ID.  Scoped OAuth requires: &#x60;status_pages.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param post_id The ID of the Status Page Post.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_status_page_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_status_page_post_update
  # Delete a Status Page Post Update
  # Delete a Post Update for a Post by Post ID and Post Update ID.  Scoped OAuth requires: &#x60;status_pages.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param post_id The ID of the Status Page Post.
  # @param post_update_id The ID of the Status Page Post Update.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_status_page_post_update test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_status_page_postmortem
  # Delete a Post Postmortem
  # Delete a Postmortem for a Post by Post ID.  Scoped OAuth requires: &#x60;status_pages.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param post_id The ID of the Status Page Post.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_status_page_postmortem test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_status_page_subscription
  # Delete a Status Page Subscription
  # Delete a Subscription for a Status Page by Status Page ID and Subscription ID.  Scoped OAuth requires: &#x60;status_pages.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param subscription_id The ID of the Status Page subscription.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_status_page_subscription test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_post_update
  # Get a Status Page Post Update
  # Get a Post Update for a Post by Post ID and Post Update ID.  Scoped OAuth requires: &#x60;status_pages.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param post_id The ID of the Status Page Post.
  # @param post_update_id The ID of the Status Page Post Update.
  # @param [Hash] opts the optional parameters
  # @return [CreateStatusPagePostUpdate201Response]
  describe 'get_post_update test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_postmortem
  # Get a Post Postmortem
  # Get a Postmortem for a Post by Post ID.  Scoped OAuth requires: &#x60;status_pages.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param post_id The ID of the Status Page Post.
  # @param [Hash] opts the optional parameters
  # @return [GetPostmortem200Response]
  describe 'get_postmortem test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_status_page_impact
  # Get a Status Page Impact
  # Get an Impact for a Status Page by Status Page ID and Impact ID.  Scoped OAuth requires: &#x60;status_pages.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param impact_id The ID of the Status Page Impact.
  # @param [Hash] opts the optional parameters
  # @return [GetStatusPageImpact200Response]
  describe 'get_status_page_impact test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_status_page_post
  # Get a Status Page Post
  # Get a Post for a Status Page by Status Page ID and Post ID.  Scoped OAuth requires: &#x60;status_pages.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param post_id The ID of the Status Page Post.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :include Array of additional Models to include in response.
  # @return [CreateStatusPagePost201Response]
  describe 'get_status_page_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_status_page_service
  # Get a Status Page Service
  # Get a Service for a Status Page by Status Page ID and Service ID.  Scoped OAuth requires: &#x60;status_pages.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param service_id The ID of the Status Page service.
  # @param [Hash] opts the optional parameters
  # @return [GetStatusPageService200Response]
  describe 'get_status_page_service test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_status_page_severity
  # Get a Status Page Severity
  # Get a Severity for a Status Page by Status Page ID and Severity ID.  Scoped OAuth requires: &#x60;status_pages.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param severity_id The ID of the Status Page severity.
  # @param [Hash] opts the optional parameters
  # @return [GetStatusPageSeverity200Response]
  describe 'get_status_page_severity test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_status_page_status
  # Get a Status Page Status
  # Get a Status for a Status Page by Status Page ID and Status ID.  Scoped OAuth requires: &#x60;status_pages.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param status_id The ID of the Status Page status.
  # @param [Hash] opts the optional parameters
  # @return [GetStatusPageStatus200Response]
  describe 'get_status_page_status test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_status_page_subscription
  # Get a Status Page Subscription
  # Get a Subscription for a Status Page by Status Page ID and Subscription ID.  Scoped OAuth requires: &#x60;status_pages.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param subscription_id The ID of the Status Page subscription.
  # @param [Hash] opts the optional parameters
  # @return [CreateStatusPageSubscription201Response]
  describe 'get_status_page_subscription test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_status_page_impacts
  # List Status Page Impacts
  # List Impacts for a Status Page by Status Page ID.  Scoped OAuth requires: &#x60;status_pages.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :post_type Filter by Post type.
  # @return [ListStatusPageImpacts200Response]
  describe 'list_status_page_impacts test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_status_page_post_updates
  # List Status Page Post Updates
  # List Post Updates for a Status Page by Status Page ID and Post ID.  Scoped OAuth requires: &#x60;status_pages.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param post_id The ID of the Status Page Post.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :reviewed_status Filter by the reviewed status of the Post Update to retrieve.
  # @return [ListStatusPagePostUpdates200Response]
  describe 'list_status_page_post_updates test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_status_page_posts
  # List Status Page Posts
  # List Posts for a Status Page by Status Page ID.  Scoped OAuth requires: &#x60;status_pages.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :post_type Filter by Post type.
  # @option opts [String] :reviewed_status Filter by the reviewed status of the Post to retrieve.
  # @option opts [Array<String>] :status Filter by an array of Status identifiers.
  # @return [ListStatusPagePosts200Response]
  describe 'list_status_page_posts test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_status_page_services
  # List Status Page Services
  # List Services for a Status Page by Status Page ID.  Scoped OAuth requires: &#x60;status_pages.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @return [ListStatusPageServices200Response]
  describe 'list_status_page_services test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_status_page_severities
  # List Status Page Severities
  # List Severities for a Status Page by Status Page ID.  Scoped OAuth requires: &#x60;status_pages.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :post_type Filter by Post type.
  # @return [ListStatusPageSeverities200Response]
  describe 'list_status_page_severities test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_status_page_statuses
  # List Status Page Statuses
  # List Statuses for a Status Page by Status Page ID.  Scoped OAuth requires: &#x60;status_pages.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :post_type Filter by Post type.
  # @return [ListStatusPageStatuses200Response]
  describe 'list_status_page_statuses test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_status_page_subscriptions
  # List Status Page Subscriptions
  # List Subscriptions for a Status Page by Status Page ID.  Scoped OAuth requires: &#x60;status_pages.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :status Filter by Subscription status.
  # @option opts [String] :channel Filter by Subscription channel.
  # @return [ListStatusPageSubscriptions200Response]
  describe 'list_status_page_subscriptions test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_status_pages
  # List Status Pages
  # List Status Pages.  Scoped OAuth requires: &#x60;status_pages.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :status_page_type The type of the Status Page.
  # @return [ListStatusPages200Response]
  describe 'list_status_pages test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_status_page_post
  # Update a Status Page Post
  # Update a Post for a Status Page by Status Page ID.  Scoped OAuth requires: &#x60;status_pages.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param post_id The ID of the Status Page Post.
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateStatusPagePostRequest] :update_status_page_post_request 
  # @return [CreateStatusPagePost201Response]
  describe 'update_status_page_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_status_page_post_update
  # Update a Status Page Post Update
  # Update a Post Update for a Post by Post ID and Post Update ID.  Scoped OAuth requires: &#x60;status_pages.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param post_id The ID of the Status Page Post.
  # @param post_update_id The ID of the Status Page Post Update.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateStatusPagePostUpdateRequest] :create_status_page_post_update_request 
  # @return [CreateStatusPagePostUpdate201Response]
  describe 'update_status_page_post_update test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_status_page_postmortem
  # Update a Post Postmortem
  # Update a Postmortem for a Post by Post ID.  Scoped OAuth requires: &#x60;status_pages.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param post_id The ID of the Status Page Post.
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateStatusPagePostmortemRequest] :update_status_page_postmortem_request 
  # @return [GetPostmortem200Response]
  describe 'update_status_page_postmortem test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
