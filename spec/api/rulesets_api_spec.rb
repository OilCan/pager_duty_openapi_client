=begin
#PagerDuty API

#This document describes the PagerDuty REST APIs.  For guides and examples please visit our [Documentation.](https://developer.pagerduty.com/docs/get-started/getting-started/)  Our REST APIs are defined in OpenAPI v3.x. You can view the schema at [github.com/PagerDuty/api-schema](https://github.com/PagerDuty/api-schema).  Note that properties in some schemas have fields not shown by default such as `readOnly`, `format`, and `default`. Hover your cursor over the right column that looks like `optional+1` to see the full list of fields. 

The version of the OpenAPI document: 2.0.0
Contact: support@pagerduty.com
Generated by: https://openapi-generator.tech
Generator version: 7.6.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::RulesetsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'RulesetsApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::RulesetsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of RulesetsApi' do
    it 'should create an instance of RulesetsApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::RulesetsApi)
    end
  end

  # unit tests for create_ruleset
  # Create a Ruleset
  # Create a new Ruleset. &lt;!-- theme: warning --&gt; &gt; ### End-of-life &gt; Rulesets and Event Rules will end-of-life soon. We highly recommend that you [migrate to Event Orchestration](https://support.pagerduty.com/docs/migrate-to-event-orchestration) as soon as possible so you can take advantage of the new functionality, such as improved UI, rule creation, APIs and Terraform support, advanced conditions, and rule nesting.  Rulesets allow you to route events to an endpoint and create collections of Event Rules, which define sets of actions to take based on event content.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#rulesets)  Scoped OAuth requires: &#x60;event_rules.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [CreateRulesetRequest] :create_ruleset_request 
  # @return [CreateRuleset201Response]
  describe 'create_ruleset test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_ruleset_event_rule
  # Create an Event Rule
  # Create a new Event Rule. &lt;!-- theme: warning --&gt; &gt; ### End-of-life &gt; Rulesets and Event Rules will end-of-life soon. We highly recommend that you [migrate to Event Orchestration](https://support.pagerduty.com/docs/migrate-to-event-orchestration) as soon as possible so you can take advantage of the new functionality, such as improved UI, rule creation, APIs and Terraform support, advanced conditions, and rule nesting.  Rulesets allow you to route events to an endpoint and create collections of Event Rules, which define sets of actions to take based on event content.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#rulesets)  Note: Create and Update on rules will accept &#39;description&#39; or &#39;summary&#39; interchangeably as an extraction action target. Get and List on rules will always return &#39;summary&#39; as the target. If you are expecting &#39;description&#39; please change your automation code to expect &#39;summary&#39; instead.  Scoped OAuth requires: &#x60;event_rules.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateRulesetEventRuleRequest] :create_ruleset_event_rule_request 
  # @return [CreateRulesetEventRule201Response]
  describe 'create_ruleset_event_rule test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_ruleset
  # Delete a Ruleset
  # Delete a Ruleset. &lt;!-- theme: warning --&gt; &gt; ### End-of-life &gt; Rulesets and Event Rules will end-of-life soon. We highly recommend that you [migrate to Event Orchestration](https://support.pagerduty.com/docs/migrate-to-event-orchestration) as soon as possible so you can take advantage of the new functionality, such as improved UI, rule creation, APIs and Terraform support, advanced conditions, and rule nesting.  Rulesets allow you to route events to an endpoint and create collections of Event Rules, which define sets of actions to take based on event content.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#rulesets)  Scoped OAuth requires: &#x60;event_rules.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_ruleset test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_ruleset_event_rule
  # Delete an Event Rule
  # Delete an Event Rule. &lt;!-- theme: warning --&gt; &gt; ### End-of-life &gt; Rulesets and Event Rules will end-of-life soon. We highly recommend that you [migrate to Event Orchestration](https://support.pagerduty.com/docs/migrate-to-event-orchestration) as soon as possible so you can take advantage of the new functionality, such as improved UI, rule creation, APIs and Terraform support, advanced conditions, and rule nesting.  Rulesets allow you to route events to an endpoint and create collections of Event Rules, which define sets of actions to take based on event content.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#rulesets)  Scoped OAuth requires: &#x60;event_rules.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param rule_id The id of the Event Rule to retrieve.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_ruleset_event_rule test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_ruleset
  # Get a Ruleset
  # Get a Ruleset. &lt;!-- theme: warning --&gt; &gt; ### End-of-life &gt; Rulesets and Event Rules will end-of-life soon. We highly recommend that you [migrate to Event Orchestration](https://support.pagerduty.com/docs/migrate-to-event-orchestration) as soon as possible so you can take advantage of the new functionality, such as improved UI, rule creation, APIs and Terraform support, advanced conditions, and rule nesting.  Rulesets allow you to route events to an endpoint and create collections of Event Rules, which define sets of actions to take based on event content.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#rulesets)  Scoped OAuth requires: &#x60;event_rules.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @return [CreateRuleset201Response]
  describe 'get_ruleset test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_ruleset_event_rule
  # Get an Event Rule
  # Get an Event Rule. &lt;!-- theme: warning --&gt; &gt; ### End-of-life &gt; Rulesets and Event Rules will end-of-life soon. We highly recommend that you [migrate to Event Orchestration](https://support.pagerduty.com/docs/migrate-to-event-orchestration) as soon as possible so you can take advantage of the new functionality, such as improved UI, rule creation, APIs and Terraform support, advanced conditions, and rule nesting.  Rulesets allow you to route events to an endpoint and create collections of Event Rules, which define sets of actions to take based on event content.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#rulesets)  Note: Create and Update on rules will accept &#39;description&#39; or &#39;summary&#39; interchangeably as an extraction action target. Get and List on rules will always return &#39;summary&#39; as the target. If you are expecting &#39;description&#39; please change your automation code to expect &#39;summary&#39; instead.  Scoped OAuth requires: &#x60;event_rules.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param rule_id The id of the Event Rule to retrieve.
  # @param [Hash] opts the optional parameters
  # @return [CreateRulesetEventRule201Response]
  describe 'get_ruleset_event_rule test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_ruleset_event_rules
  # List Event Rules
  # List all Event Rules on a Ruleset. &lt;!-- theme: warning --&gt; &gt; ### End-of-life &gt; Rulesets and Event Rules will end-of-life soon. We highly recommend that you [migrate to Event Orchestration](https://support.pagerduty.com/docs/migrate-to-event-orchestration) as soon as possible so you can take advantage of the new functionality, such as improved UI, rule creation, APIs and Terraform support, advanced conditions, and rule nesting.  Rulesets allow you to route events to an endpoint and create collections of Event Rules, which define sets of actions to take based on event content.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#rulesets)  Note: Create and Update on rules will accept &#39;description&#39; or &#39;summary&#39; interchangeably as an extraction action target. Get and List on rules will always return &#39;summary&#39; as the target. If you are expecting &#39;description&#39; please change your automation code to expect &#39;summary&#39; instead.  Scoped OAuth requires: &#x60;event_rules.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of results per page.
  # @option opts [Integer] :offset Offset to start pagination search results.
  # @option opts [Boolean] :total By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information. 
  # @return [ListRulesetEventRules200Response]
  describe 'list_ruleset_event_rules test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_rulesets
  # List Rulesets
  # List all Rulesets &lt;!-- theme: warning --&gt; &gt; ### End-of-life &gt; Rulesets and Event Rules will end-of-life soon. We highly recommend that you [migrate to Event Orchestration](https://support.pagerduty.com/docs/migrate-to-event-orchestration) as soon as possible so you can take advantage of the new functionality, such as improved UI, rule creation, APIs and Terraform support, advanced conditions, and rule nesting.  Rulesets allow you to route events to an endpoint and create collections of Event Rules, which define sets of actions to take based on event content.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#rulesets)  Scoped OAuth requires: &#x60;event_rules.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of results per page.
  # @option opts [Integer] :offset Offset to start pagination search results.
  # @option opts [Boolean] :total By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information. 
  # @return [ListRulesets200Response]
  describe 'list_rulesets test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_ruleset
  # Update a Ruleset
  # Update a Ruleset. &lt;!-- theme: warning --&gt; &gt; ### End-of-life &gt; Rulesets and Event Rules will end-of-life soon. We highly recommend that you [migrate to Event Orchestration](https://support.pagerduty.com/docs/migrate-to-event-orchestration) as soon as possible so you can take advantage of the new functionality, such as improved UI, rule creation, APIs and Terraform support, advanced conditions, and rule nesting.  Rulesets allow you to route events to an endpoint and create collections of Event Rules, which define sets of actions to take based on event content.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#rulesets)  Scoped OAuth requires: &#x60;event_rules.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateRulesetRequest] :update_ruleset_request 
  # @return [CreateRuleset201Response]
  describe 'update_ruleset test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_ruleset_event_rule
  # Update an Event Rule
  # Update an Event Rule. Note that the endpoint supports partial updates, so any number of the writable fields can be provided. &lt;!-- theme: warning --&gt; &gt; ### End-of-life &gt; Rulesets and Event Rules will end-of-life soon. We highly recommend that you [migrate to Event Orchestration](https://support.pagerduty.com/docs/migrate-to-event-orchestration) as soon as possible so you can take advantage of the new functionality, such as improved UI, rule creation, APIs and Terraform support, advanced conditions, and rule nesting.  Rulesets allow you to route events to an endpoint and create collections of Event Rules, which define sets of actions to take based on event content.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#rulesets)  Note: Create and Update on rules will accept &#39;description&#39; or &#39;summary&#39; interchangeably as an extraction action target. Get and List on rules will always return &#39;summary&#39; as the target. If you are expecting &#39;description&#39; please change your automation code to expect &#39;summary&#39; instead.  Scoped OAuth requires: &#x60;event_rules.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param rule_id The id of the Event Rule to retrieve.
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateRulesetEventRuleRequest] :update_ruleset_event_rule_request 
  # @return [CreateRulesetEventRule201Response]
  describe 'update_ruleset_event_rule test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
