=begin
#PagerDuty API

#This document describes the PagerDuty REST APIs.  For guides and examples please visit our [Documentation.](https://developer.pagerduty.com/docs/get-started/getting-started/)  Our REST APIs are defined in OpenAPI v3.x. You can view the schema at [github.com/PagerDuty/api-schema](https://github.com/PagerDuty/api-schema).  Note that properties in some schemas have fields not shown by default such as `readOnly`, `format`, and `default`. Hover your cursor over the right column that looks like `optional+1` to see the full list of fields. 

The version of the OpenAPI document: 2.0.0
Contact: support@pagerduty.com
Generated by: https://openapi-generator.tech
Generator version: 7.6.0

=end

require 'spec_helper'
require 'json'

# Unit tests for PagerDutyOpenapiClient::ServiceDependenciesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ServiceDependenciesApi' do
  before do
    # run before each test
    @api_instance = PagerDutyOpenapiClient::ServiceDependenciesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ServiceDependenciesApi' do
    it 'should create an instance of ServiceDependenciesApi' do
      expect(@api_instance).to be_instance_of(PagerDutyOpenapiClient::ServiceDependenciesApi)
    end
  end

  # unit tests for create_service_dependency
  # Associate service dependencies
  # Create new dependencies between two services.  Business services model capabilities that span multiple technical services and that may be owned by several different teams.  A service can have a maximum of 2,000 dependencies with a depth limit of 100. If the limit is reached, the API will respond with an error.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#business-services)  Scoped OAuth requires: &#x60;services.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [CreateServiceDependencyRequest] :create_service_dependency_request 
  # @return [CreateServiceDependency200Response]
  describe 'create_service_dependency test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_service_dependency
  # Disassociate service dependencies
  # Disassociate dependencies between two services.  Business services model capabilities that span multiple technical services and that may be owned by several different teams.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#business-services)  Scoped OAuth requires: &#x60;services.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [DeleteServiceDependencyRequest] :delete_service_dependency_request 
  # @return [CreateServiceDependency200Response]
  describe 'delete_service_dependency test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_business_service_service_dependencies
  # Get Business Service dependencies
  # Get all immediate dependencies of any Business Service.  Business Services model capabilities that span multiple technical services and that may be owned by several different teams.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#business-services)  Scoped OAuth requires: &#x60;services.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @return [GetBusinessServiceServiceDependencies200Response]
  describe 'get_business_service_service_dependencies test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_technical_service_service_dependencies
  # Get technical service dependencies
  # Get all immediate dependencies of any technical service. Technical services are also known as &#x60;services&#x60;.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#services)  Scoped OAuth requires: &#x60;services.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @return [CreateServiceDependency200Response]
  describe 'get_technical_service_service_dependencies test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
