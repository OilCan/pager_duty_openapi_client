=begin
#PagerDuty API

#This document describes the PagerDuty REST APIs.  For guides and examples please visit our [Documentation.](https://developer.pagerduty.com/docs/get-started/getting-started/)  Our REST APIs are defined in OpenAPI v3.x. You can view the schema at [github.com/PagerDuty/api-schema](https://github.com/PagerDuty/api-schema).  Note that properties in some schemas have fields not shown by default such as `readOnly`, `format`, and `default`. Hover your cursor over the right column that looks like `optional+1` to see the full list of fields. 

The version of the OpenAPI document: 2.0.0
Contact: support@pagerduty.com
Generated by: https://openapi-generator.tech
Generator version: 7.6.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::PausedIncidentReportsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PausedIncidentReportsApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::PausedIncidentReportsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PausedIncidentReportsApi' do
    it 'should create an instance of PausedIncidentReportsApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::PausedIncidentReportsApi)
    end
  end

  # unit tests for get_paused_incident_report_alerts
  # Get Paused Incident Reporting on Alerts
  # Returns the 5 most recent alerts that were triggered after being paused and the 5 most recent alerts that were resolved after being paused for a given reporting period (maximum 6 months lookback period).  Note: This feature is currently available as part of the Event Intelligence package or Digital Operations plan only.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#paused-incident-reports)  Scoped OAuth requires: &#x60;incidents.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Time] :since The start of the date range over which you want to search.
  # @option opts [Time] :_until The end of the date range over which you want to search.
  # @option opts [String] :service_id Specifies a filter to limit the scope of reporting to a particular service
  # @option opts [String] :suspended_by Specifies a filter to scope the response to either alerts suspended by Auto Pause or Event Rules.
  # @return [GetPausedIncidentReportAlerts200Response]
  describe 'get_paused_incident_report_alerts test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_paused_incident_report_counts
  # Get Paused Incident Reporting counts
  # Returns reporting counts for paused Incident usage for a given reporting period (maximum 6 months lookback period).  Note: This feature is currently available as part of the Event Intelligence package or Digital Operations plan only.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#paused-incident-reports)  Scoped OAuth requires: &#x60;incidents.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Time] :since The start of the date range over which you want to search.
  # @option opts [Time] :_until The end of the date range over which you want to search.
  # @option opts [String] :service_id Specifies a filter to limit the scope of reporting to a particular service
  # @option opts [String] :suspended_by Specifies a filter to scope the response to either alerts suspended by Auto Pause or Event Rules.
  # @return [GetPausedIncidentReportCounts200Response]
  describe 'get_paused_incident_report_counts test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
