=begin
#PagerDuty API

#This document describes the PagerDuty REST APIs.  For guides and examples please visit our [Documentation.](https://developer.pagerduty.com/docs/get-started/getting-started/)  Our REST APIs are defined in OpenAPI v3.x. You can view the schema at [github.com/PagerDuty/api-schema](https://github.com/PagerDuty/api-schema).  Note that properties in some schemas have fields not shown by default such as `readOnly`, `format`, and `default`. Hover your cursor over the right column that looks like `optional+1` to see the full list of fields. 

The version of the OpenAPI document: 2.0.0
Contact: support@pagerduty.com
Generated by: https://openapi-generator.tech
Generator version: 7.6.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::UsersApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'UsersApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::UsersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UsersApi' do
    it 'should create an instance of UsersApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::UsersApi)
    end
  end

  # unit tests for create_user
  # Create a user
  # Create a new user.  Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)  Scoped OAuth requires: &#x60;users.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param from The email address of a valid user associated with the account making the request.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateUserRequest] :create_user_request The user to be created.
  # @return [CreateUser201Response]
  describe 'create_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_user_contact_method
  # Create a user contact method
  # Create a new contact method for the User.  Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)  Scoped OAuth requires: &#x60;users:contact_methods.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateUserContactMethodRequest] :create_user_contact_method_request The contact method to be created.
  # @return [CreateUserContactMethod201Response]
  describe 'create_user_contact_method test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_user_handoff_notification_rule
  # Create a User Handoff Notification Rule
  # Create a new Handoff Notification Rule. Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account. For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)  Scoped OAuth requires: &#x60;users.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateUserHandoffNotificationRuleRequest] :create_user_handoff_notification_rule_request The Handoff Notification Rule to be created.
  # @return [CreateUserHandoffNotificationRuleRequest]
  describe 'create_user_handoff_notification_rule test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_user_notification_rule
  # Create a user notification rule
  # Create a new notification rule.  Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)  Scoped OAuth requires: &#x60;users:contact_methods.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateUserNotificationRuleRequest] :create_user_notification_rule_request The notification rule to be created.
  # @return [CreateUserNotificationRuleRequest]
  describe 'create_user_notification_rule test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_user_notification_subscriptions
  # Create Notification Subcriptions
  # Create new Notification Subscriptions for the given User.  Scoped OAuth requires: &#x60;subscribers.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateTeamNotificationSubscriptionsRequest] :create_team_notification_subscriptions_request The entities to subscribe to.
  # @return [CreateBusinessServiceNotificationSubscribers200Response]
  describe 'create_user_notification_subscriptions test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_user_status_update_notification_rule
  # Create a user status update notification rule
  # Create a new status update notification rule.  Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.  &lt;!-- theme: warning --&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)  Scoped OAuth requires: &#x60;users.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param x_early_access This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateUserStatusUpdateNotificationRuleRequest] :create_user_status_update_notification_rule_request The status update notification rule to be created.
  # @return [CreateUserStatusUpdateNotificationRule201Response]
  describe 'create_user_status_update_notification_rule test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_user
  # Delete a user
  # Remove an existing user.  Returns 400 if the user has assigned incidents unless your [pricing plan](https://www.pagerduty.com/pricing) has the &#x60;offboarding&#x60; feature and the account is [configured](https://support.pagerduty.com/docs/offboarding#section-additional-configurations) appropriately.  Note that the incidents reassignment process is asynchronous and has no guarantee to complete before the api call return.  [*Learn more about &#x60;offboarding&#x60; feature*](https://support.pagerduty.com/docs/offboarding).  Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)  Scoped OAuth requires: &#x60;users.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_user_contact_method
  # Delete a user&#39;s contact method
  # Remove a user&#39;s contact method.  Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)  Scoped OAuth requires: &#x60;users:contact_methods.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param contact_method_id The contact method ID on the user.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_user_contact_method test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_user_handoff_notification_rule
  # Delete a User&#39;s Handoff Notification rule
  # Remove a User&#39;s Handoff Notification Rule. Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account. For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)  Scoped OAuth requires: &#x60;users.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param oncall_handoff_notification_rule_id The oncall handoff notification rule ID on the user.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_user_handoff_notification_rule test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_user_notification_rule
  # Delete a user&#39;s notification rule
  # Remove a user&#39;s notification rule.  Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)  Scoped OAuth requires: &#x60;users:contact_methods.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param notification_rule_id The notification rule ID on the user.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_user_notification_rule test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_user_session
  # Delete a user&#39;s session
  # Delete a user&#39;s session.  Beginning November 2021, user sessions no longer includes newly issued OAuth tokens.  Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)  Scoped OAuth requires: &#x60;users:sessions.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param type The session type for the user session ID.
  # @param session_id The session ID for the user.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_user_session test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_user_sessions
  # Delete all user sessions
  # Delete all user sessions.  Beginning November 2021, user sessions no longer includes newly issued OAuth tokens.  Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)  Scoped OAuth requires: &#x60;users:sessions.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_user_sessions test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_user_status_update_notification_rule
  # Delete a user&#39;s status update notification rule
  # Remove a user&#39;s status update notification rule.  Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.  &lt;!-- theme: warning --&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)  Scoped OAuth requires: &#x60;users.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param x_early_access This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! 
  # @param id The ID of the resource.
  # @param status_update_notification_rule_id The status update notification rule ID on the user.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_user_status_update_notification_rule test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_current_user
  # Get the current user
  # Get details about the current user.  This endpoint can only be used with a [user-level API key](https://support.pagerduty.com/docs/using-the-api#section-generating-a-personal-rest-api-key) or a key generated through an OAuth flow. This will not work if the request is made with an account-level access token.  Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users) 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :include Array of additional Models to include in response.
  # @return [CreateUser201Response]
  describe 'get_current_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_user
  # Get a user
  # Get details about an existing user.  Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)  Scoped OAuth requires: &#x60;users.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :include Array of additional Models to include in response.
  # @return [CreateUser201Response]
  describe 'get_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_user_contact_method
  # Get a user&#39;s contact method
  # Get details about a User&#39;s contact method.  Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)  Scoped OAuth requires: &#x60;users:contact_methods.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param contact_method_id The contact method ID on the user.
  # @param [Hash] opts the optional parameters
  # @return [CreateUserContactMethod201Response]
  describe 'get_user_contact_method test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_user_contact_methods
  # List a user&#39;s contact methods
  # List contact methods of your PagerDuty user.  Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)  Scoped OAuth requires: &#x60;users:contact_methods.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @return [GetUserContactMethods200Response]
  describe 'get_user_contact_methods test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_user_handoff_notifiaction_rule
  # Get a user&#39;s handoff notification rule
  # Get details about a User&#39;s Handoff Notification Rule. Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account. For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)  Scoped OAuth requires: &#x60;users.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param oncall_handoff_notification_rule_id The oncall handoff notification rule ID on the user.
  # @param [Hash] opts the optional parameters
  # @return [CreateUserHandoffNotificationRuleRequest]
  describe 'get_user_handoff_notifiaction_rule test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_user_handoff_notification_rules
  # List a User&#39;s Handoff Notification Rules
  # List Handoff Notification Rules of your PagerDuty User. Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account. For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)  Scoped OAuth requires: &#x60;users.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @return [GetUserHandoffNotificationRules200Response]
  describe 'get_user_handoff_notification_rules test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_user_license
  # Get the License allocated to a User
  # Get the License allocated to a User  Scoped OAuth requires: &#x60;licenses.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @return [GetUserLicense200Response]
  describe 'get_user_license test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_user_notification_rule
  # Get a user&#39;s notification rule
  # Get details about a user&#39;s notification rule.  Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)  Scoped OAuth requires: &#x60;users:contact_methods.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param notification_rule_id The notification rule ID on the user.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :include Array of additional details to include.
  # @return [CreateUserNotificationRuleRequest]
  describe 'get_user_notification_rule test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_user_notification_rules
  # List a user&#39;s notification rules
  # List notification rules of your PagerDuty user.  Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)  Scoped OAuth requires: &#x60;users:contact_methods.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :include Array of additional details to include.
  # @option opts [String] :urgency The incident urgency for which the notification rules are applied. If not specified, defaults to &#x60;high&#x60;.
  # @return [GetUserNotificationRules200Response]
  describe 'get_user_notification_rules test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_user_notification_subscriptions
  # List Notification Subscriptions
  # Retrieve a list of Notification Subscriptions the given User has.  &lt;!-- theme: warning --&gt; &gt; Users must be added through &#x60;POST /users/{id}/notification_subscriptions&#x60; to be returned from this endpoint.  Scoped OAuth requires: &#x60;subscribers.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @return [GetTeamNotificationSubscriptions200Response]
  describe 'get_user_notification_subscriptions test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_user_session
  # Get a user&#39;s session
  # Get details about a user&#39;s session.  Beginning November 2021, user sessions no longer includes newly issued OAuth tokens.  Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)  Scoped OAuth requires: &#x60;users:sessions.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param type The session type for the user session ID.
  # @param session_id The session ID for the user.
  # @param [Hash] opts the optional parameters
  # @return [GetUserSession200Response]
  describe 'get_user_session test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_user_sessions
  # List a user&#39;s active sessions
  # List active sessions of a PagerDuty user.  Beginning November 2021, active sessions no longer includes newly issued OAuth tokens.  Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)  Scoped OAuth requires: &#x60;users:sessions.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @return [GetUserSessions200Response]
  describe 'get_user_sessions test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_user_status_update_notification_rule
  # Get a user&#39;s status update notification rule
  # Get details about a user&#39;s status update notification rule.  Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.  &lt;!-- theme: warning --&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)  Scoped OAuth requires: &#x60;users.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param x_early_access This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! 
  # @param id The ID of the resource.
  # @param status_update_notification_rule_id The status update notification rule ID on the user.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :include Array of additional details to include.
  # @return [GetUserStatusUpdateNotificationRule200Response]
  describe 'get_user_status_update_notification_rule test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_user_status_update_notification_rules
  # List a user&#39;s status update notification rules
  # List status update notification rules of your PagerDuty user.  Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.  &lt;!-- theme: warning --&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)  Scoped OAuth requires: &#x60;users.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param x_early_access This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :include Array of additional details to include.
  # @return [GetUserStatusUpdateNotificationRules200Response]
  describe 'get_user_status_update_notification_rules test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_users
  # List users
  # List users of your PagerDuty account, optionally filtered by a search query.  Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)  Scoped OAuth requires: &#x60;users.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :query Filters the result, showing only the records whose name matches the query.
  # @option opts [Array<String>] :team_ids An array of team IDs. Only results related to these teams will be returned. Account must have the &#x60;teams&#x60; ability to use this parameter.
  # @option opts [Integer] :limit The number of results per page.
  # @option opts [Integer] :offset Offset to start pagination search results.
  # @option opts [Boolean] :total By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information. 
  # @option opts [String] :include Array of additional Models to include in response.
  # @return [ListUsers200Response]
  describe 'list_users test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_users_audit_records
  # List audit records for a user
  # The response will include audit records with changes that are made to the identified user not changes made by the identified user.   The returned records are sorted by the &#x60;execution_time&#x60; from newest to oldest.  See [&#x60;Cursor-based pagination&#x60;](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for instructions on how to paginate through the result set.  For more information see the [Audit API Document](https://developer.pagerduty.com/docs/rest-api-v2/audit-records-api/).  Scoped OAuth requires: &#x60;audit_records.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The minimum of the &#x60;limit&#x60; parameter used in the request or the maximum request size of the API.
  # @option opts [String] :cursor Optional parameter used to request the \&quot;next\&quot; set of results from an API.  The value provided here is most commonly obtained from the &#x60;next_cursor&#x60; field of the previous request.  When no value is provided, the request starts at the beginning of the result set. 
  # @option opts [Time] :since The start of the date range over which you want to search. If not specified, defaults to &#x60;now() - 24 hours&#x60; (past 24 hours)
  # @option opts [Time] :_until The end of the date range over which you want to search. If not specified, defaults to &#x60;now()&#x60;. May not be more than 31 days after &#x60;since&#x60;.
  # @return [AuditRecordResponseSchema]
  describe 'list_users_audit_records test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for unsubscribe_user_notification_subscriptions
  # Remove Notification Subscriptions
  # Unsubscribe the given User from Notifications on the matching Subscribable entities.  Scoped OAuth requires: &#x60;subscribers.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateTeamNotificationSubscriptionsRequest] :create_team_notification_subscriptions_request The entities to unsubscribe from.
  # @return [RemoveBusinessServiceNotificationSubscriber200Response]
  describe 'unsubscribe_user_notification_subscriptions test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_user
  # Update a user
  # Update an existing user.  Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)  Scoped OAuth requires: &#x60;users.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateUserRequest] :create_user_request The user to be updated.
  # @return [CreateUser201Response]
  describe 'update_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_user_contact_method
  # Update a user&#39;s contact method
  # Update a User&#39;s contact method.  Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)  Scoped OAuth requires: &#x60;users:contact_methods.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param contact_method_id The contact method ID on the user.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateUserContactMethodRequest] :create_user_contact_method_request The user&#39;s contact method to be updated.
  # @return [CreateUserContactMethod201Response]
  describe 'update_user_contact_method test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_user_handoff_notification
  # Update a User&#39;s Handoff Notification Rule
  # Update a User&#39;s Handoff Notification Rule. Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account. For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)  Scoped OAuth requires: &#x60;users.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param oncall_handoff_notification_rule_id The oncall handoff notification rule ID on the user.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateUserHandoffNotificationRuleRequest] :create_user_handoff_notification_rule_request The User&#39;s Handoff Notification Rule to be updated.
  # @return [UpdateUserHandoffNotification200Response]
  describe 'update_user_handoff_notification test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_user_notification_rule
  # Update a user&#39;s notification rule
  # Update a user&#39;s notification rule.  Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)  Scoped OAuth requires: &#x60;users:contact_methods.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param notification_rule_id The notification rule ID on the user.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateUserNotificationRuleRequest] :create_user_notification_rule_request The user&#39;s notification rule to be updated.
  # @return [UpdateUserNotificationRule200Response]
  describe 'update_user_notification_rule test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_user_status_update_notification_rule
  # Update a user&#39;s status update notification rule
  # Update a user&#39;s status update notification rule.  Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.  &lt;!-- theme: warning --&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)  Scoped OAuth requires: &#x60;users.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param x_early_access This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! 
  # @param id The ID of the resource.
  # @param status_update_notification_rule_id The status update notification rule ID on the user.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateUserStatusUpdateNotificationRule201Response] :create_user_status_update_notification_rule201_response The user&#39;s status update notification rule to be updated.
  # @return [UpdateUserStatusUpdateNotificationRule200Response]
  describe 'update_user_status_update_notification_rule test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
