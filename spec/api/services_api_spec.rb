=begin
#PagerDuty API

#This document describes the PagerDuty REST APIs.  For guides and examples please visit our [Documentation.](https://developer.pagerduty.com/docs/get-started/getting-started/)  Our REST APIs are defined in OpenAPI v3.x. You can view the schema at [github.com/PagerDuty/api-schema](https://github.com/PagerDuty/api-schema).  Note that properties in some schemas have fields not shown by default such as `readOnly`, `format`, and `default`. Hover your cursor over the right column that looks like `optional+1` to see the full list of fields. 

The version of the OpenAPI document: 2.0.0
Contact: support@pagerduty.com
Generated by: https://openapi-generator.tech
Generator version: 7.6.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::ServicesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ServicesApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::ServicesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ServicesApi' do
    it 'should create an instance of ServicesApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::ServicesApi)
    end
  end

  # unit tests for convert_service_event_rules_to_event_orchestration
  # Convert a Service&#39;s Event Rules into Event Orchestration Rules
  # Convert this Service&#39;s Event Rules into functionally equivalent Event Orchestration Rules.  Sending a request to this API endpoint has several effects:  1. Automatically creates Event Orchestration Rules for this Service that will behave identically as this Service&#39;s currently configured Event Rules. 2. Makes all existing Event Rules for this Service read-only. All future updates need to be made via the newly created Event Orchestration rules.  Sending a request to this API endpoint will **not** change how future events will be processed. If past events for this Service have been evaluated via Event Rules then new events sent to this Service will also continue to be evaluated via the (now read-only) Event Rules. To change this Service so that new events start being evaluated via the newly created Event Orchestration Rules use the [Update the Service Orchestration active status for a Service API](https://developer.pagerduty.com/api-reference/855659be83d9e-update-the-service-orchestration-active-status-for-a-service).  &gt; ### End-of-life &gt; Event Rules will end-of-life soon. We highly recommend that you use this API to [migrate to Event Orchestration](https://support.pagerduty.com/docs/migrate-to-event-orchestration) as soon as possible so you can take advantage of the new functionality, such as improved UI, rule creation, APIs and Terraform support, advanced conditions, and rule nesting.  Scoped OAuth requires: &#x60;services.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @return [ConvertServiceEventRulesToEventOrchestration200Response]
  describe 'convert_service_event_rules_to_event_orchestration test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_service
  # Create a service
  # Create a new service.  If &#x60;status&#x60; is included in the request, it must have a value of &#x60;active&#x60; when creating a new service. If a different status is required, make a second request to update the service.  A service may represent an application, component, or team you wish to open incidents against.  There is a limit of 25,000 services per account. If the limit is reached, the API will respond with an error. There is also a limit of 100,000 open Incidents per Service. If the limit is reached and &#x60;auto_resolve_timeout&#x60; is disabled (set to 0 or null), the &#x60;auto_resolve_timeout&#x60; property will automatically be set to  84600 (1 day).  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#services)  Scoped OAuth requires: &#x60;services.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [CreateServiceRequest] :create_service_request The service to be created
  # @return [CreateServiceRequest]
  describe 'create_service test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_service_event_rule
  # Create an Event Rule on a Service
  # Create a new Event Rule on a Service. &lt;!-- theme: warning --&gt; &gt; ### End-of-life &gt; Rulesets and Event Rules will end-of-life soon. We highly recommend that you [migrate to Event Orchestration](https://support.pagerduty.com/docs/migrate-to-event-orchestration) as soon as possible so you can take advantage of the new functionality, such as improved UI, rule creation, APIs and Terraform support, advanced conditions, and rule nesting.  Scoped OAuth requires: &#x60;services.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateServiceEventRuleRequest] :create_service_event_rule_request 
  # @return [CreateServiceEventRule201Response]
  describe 'create_service_event_rule test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_service_integration
  # Create a new integration
  # Create a new integration belonging to a Service.  A service may represent an application, component, or team you wish to open incidents against.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#services)  Scoped OAuth requires: &#x60;services.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateServiceIntegrationRequest] :create_service_integration_request The integration to be created
  # @return [CreateServiceIntegrationRequest]
  describe 'create_service_integration test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_service
  # Delete a service
  # Delete an existing service.  Once the service is deleted, it will not be accessible from the web UI and new incidents won&#39;t be able to be created for this service.  A service may represent an application, component, or team you wish to open incidents against.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#services)  Scoped OAuth requires: &#x60;services.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_service test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_service_event_rule
  # Delete an Event Rule from a Service
  # Delete an Event Rule from a Service. &lt;!-- theme: warning --&gt; &gt; ### End-of-life &gt; Rulesets and Event Rules will end-of-life soon. We highly recommend that you [migrate to Event Orchestration](https://support.pagerduty.com/docs/migrate-to-event-orchestration) as soon as possible so you can take advantage of the new functionality, such as improved UI, rule creation, APIs and Terraform support, advanced conditions, and rule nesting.  Scoped OAuth requires: &#x60;services.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param rule_id The id of the Event Rule to retrieve.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_service_event_rule test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_service
  # Get a service
  # Get details about an existing service.  A service may represent an application, component, or team you wish to open incidents against.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#services)  Scoped OAuth requires: &#x60;services.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :include Array of additional details to include.
  # @return [CreateServiceRequest]
  describe 'get_service test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_service_event_rule
  # Get an Event Rule from a Service
  # Get an Event Rule from a Service. &lt;!-- theme: warning --&gt; &gt; ### End-of-life &gt; Rulesets and Event Rules will end-of-life soon. We highly recommend that you [migrate to Event Orchestration](https://support.pagerduty.com/docs/migrate-to-event-orchestration) as soon as possible so you can take advantage of the new functionality, such as improved UI, rule creation, APIs and Terraform support, advanced conditions, and rule nesting.  Scoped OAuth requires: &#x60;services.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param rule_id The id of the Event Rule to retrieve.
  # @param [Hash] opts the optional parameters
  # @return [CreateServiceEventRule201Response]
  describe 'get_service_event_rule test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_service_integration
  # View an integration
  # Get details about an integration belonging to a service.  A service may represent an application, component, or team you wish to open incidents against.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#services)  Scoped OAuth requires: &#x60;services.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param integration_id The integration ID on the service.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :include Array of additional details to include.
  # @return [CreateServiceIntegrationRequest]
  describe 'get_service_integration test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_service_audit_records
  # List audit records for a service
  # The returned records are sorted by the &#x60;execution_time&#x60; from newest to oldest.  See [&#x60;Cursor-based pagination&#x60;](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for instructions on how to paginate through the result set.  For more information see the [Audit API Document](https://developer.pagerduty.com/docs/rest-api-v2/audit-records-api/).  Scoped OAuth requires: &#x60;audit_records.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The minimum of the &#x60;limit&#x60; parameter used in the request or the maximum request size of the API.
  # @option opts [String] :cursor Optional parameter used to request the \&quot;next\&quot; set of results from an API.  The value provided here is most commonly obtained from the &#x60;next_cursor&#x60; field of the previous request.  When no value is provided, the request starts at the beginning of the result set. 
  # @option opts [Time] :since The start of the date range over which you want to search. If not specified, defaults to &#x60;now() - 24 hours&#x60; (past 24 hours)
  # @option opts [Time] :_until The end of the date range over which you want to search. If not specified, defaults to &#x60;now()&#x60;. May not be more than 31 days after &#x60;since&#x60;.
  # @return [AuditRecordResponseSchema]
  describe 'list_service_audit_records test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_service_event_rules
  # List Service&#39;s Event Rules
  # List Event Rules on a Service. &lt;!-- theme: warning --&gt; &gt; ### End-of-life &gt; Rulesets and Event Rules will end-of-life soon. We highly recommend that you [migrate to Event Orchestration](https://support.pagerduty.com/docs/migrate-to-event-orchestration) as soon as possible so you can take advantage of the new functionality, such as improved UI, rule creation, APIs and Terraform support, advanced conditions, and rule nesting.  Scoped OAuth requires: &#x60;services.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of results per page.
  # @option opts [Integer] :offset Offset to start pagination search results.
  # @option opts [Boolean] :total By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information. 
  # @option opts [String] :include Array of additional Models to include in response.
  # @return [ListServiceEventRules200Response]
  describe 'list_service_event_rules test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_services
  # List services
  # List existing Services.  A service may represent an application, component, or team you wish to open incidents against.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#services)  Scoped OAuth requires: &#x60;services.read&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :query Filters the result, showing only the records whose name matches the query.
  # @option opts [Integer] :limit The number of results per page.
  # @option opts [Integer] :offset Offset to start pagination search results.
  # @option opts [Boolean] :total By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information. 
  # @option opts [Array<String>] :team_ids An array of team IDs. Only results related to these teams will be returned. Account must have the &#x60;teams&#x60; ability to use this parameter.
  # @option opts [String] :time_zone Time zone in which results will be rendered. This will default to the account time zone.
  # @option opts [String] :sort_by Used to specify the field you wish to sort the results on.
  # @option opts [String] :include Array of additional details to include.
  # @option opts [String] :name Filters the results, showing only services with the specified name.
  # @return [ListServices200Response]
  describe 'list_services test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_service
  # Update a service
  # Update an existing service.  A service may represent an application, component, or team you wish to open incidents against.  There is a limit of 100,000 open Incidents per Service. If the limit is reached and you disable &#x60;auto_resolve_timeout&#x60; (set to 0 or null), the API will respond with an error.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#services)  Scoped OAuth requires: &#x60;services.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateServiceRequest] :create_service_request The service to be updated.
  # @return [CreateServiceRequest]
  describe 'update_service test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_service_event_rule
  # Update an Event Rule on a Service
  # Update an Event Rule on a Service. Note that the endpoint supports partial updates, so any number of the writable fields can be provided. &lt;!-- theme: warning --&gt; &gt; ### End-of-life &gt; Rulesets and Event Rules will end-of-life soon. We highly recommend that you [migrate to Event Orchestration](https://support.pagerduty.com/docs/migrate-to-event-orchestration) as soon as possible so you can take advantage of the new functionality, such as improved UI, rule creation, APIs and Terraform support, advanced conditions, and rule nesting.  Scoped OAuth requires: &#x60;services.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param rule_id The id of the Event Rule to retrieve.
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateServiceEventRuleRequest] :update_service_event_rule_request 
  # @return [CreateServiceEventRule201Response]
  describe 'update_service_event_rule test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_service_integration
  # Update an existing integration
  # Update an integration belonging to a Service.  A service may represent an application, component, or team you wish to open incidents against.  For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#services)  Scoped OAuth requires: &#x60;services.write&#x60; 
  # @param accept The &#x60;Accept&#x60; header is used as a versioning header.
  # @param content_type 
  # @param id The ID of the resource.
  # @param integration_id The integration ID on the service.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateServiceIntegrationRequest] :create_service_integration_request The integration to be updated
  # @return [CreateServiceIntegrationRequest]
  describe 'update_service_integration test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
