=begin
#PagerDuty API

#This document describes the PagerDuty REST APIs.  For guides and examples please visit our [Documentation.](https://developer.pagerduty.com/docs/get-started/getting-started/)  Our REST APIs are defined in OpenAPI v3.x. You can view the schema at [github.com/PagerDuty/api-schema](https://github.com/PagerDuty/api-schema).  Note that properties in some schemas have fields not shown by default such as `readOnly`, `format`, and `default`. Hover your cursor over the right column that looks like `optional+1` to see the full list of fields. 

The version of the OpenAPI document: 2.0.0
Contact: support@pagerduty.com
Generated by: https://openapi-generator.tech
Generator version: 7.6.0

=end

require 'cgi'

module OpenapiClient
  class AuditApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # List audit records
    # List audit trail records matching provided query params or default criteria.  The returned records are sorted by the `execution_time` from newest to oldest.  See [`Cursor-based pagination`](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for instructions on how to paginate through the result set.  Only admins, account owners, or global API tokens on PagerDuty account [pricing plans](https://www.pagerduty.com/pricing) with the \"Audit Trail\" feature can access this endpoint.  For other role based access to audit records by resource ID, see the resource's API documentation.  For more information see the [Audit API Document](https://developer.pagerduty.com/docs/rest-api-v2/audit-records-api/).  Scoped OAuth requires: `audit_records.read` 
    # @param accept [String] The &#x60;Accept&#x60; header is used as a versioning header.
    # @param content_type [String] 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :limit The minimum of the &#x60;limit&#x60; parameter used in the request or the maximum request size of the API.
    # @option opts [String] :cursor Optional parameter used to request the \&quot;next\&quot; set of results from an API.  The value provided here is most commonly obtained from the &#x60;next_cursor&#x60; field of the previous request.  When no value is provided, the request starts at the beginning of the result set. 
    # @option opts [Time] :since The start of the date range over which you want to search. If not specified, defaults to &#x60;now() - 24 hours&#x60; (past 24 hours)
    # @option opts [Time] :_until The end of the date range over which you want to search. If not specified, defaults to &#x60;now()&#x60;. May not be more than 31 days after &#x60;since&#x60;.
    # @option opts [String] :root_resource_types Resource type filter for the root_resource.
    # @option opts [String] :actor_type Actor type filter.
    # @option opts [String] :actor_id Actor Id filter. Must be qualified by providing the &#x60;actor_type&#x60; param.
    # @option opts [String] :method_type Method type filter.
    # @option opts [String] :method_truncated_token Method truncated_token filter. Must be qualified by providing the &#x60;method_type&#x60; param.
    # @option opts [String] :actions Action filter
    # @return [AuditRecordResponseSchema]
    def list_audit_records(accept, content_type, opts = {})
      data, _status_code, _headers = list_audit_records_with_http_info(accept, content_type, opts)
      data
    end

    # List audit records
    # List audit trail records matching provided query params or default criteria.  The returned records are sorted by the &#x60;execution_time&#x60; from newest to oldest.  See [&#x60;Cursor-based pagination&#x60;](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for instructions on how to paginate through the result set.  Only admins, account owners, or global API tokens on PagerDuty account [pricing plans](https://www.pagerduty.com/pricing) with the \&quot;Audit Trail\&quot; feature can access this endpoint.  For other role based access to audit records by resource ID, see the resource&#39;s API documentation.  For more information see the [Audit API Document](https://developer.pagerduty.com/docs/rest-api-v2/audit-records-api/).  Scoped OAuth requires: &#x60;audit_records.read&#x60; 
    # @param accept [String] The &#x60;Accept&#x60; header is used as a versioning header.
    # @param content_type [String] 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :limit The minimum of the &#x60;limit&#x60; parameter used in the request or the maximum request size of the API.
    # @option opts [String] :cursor Optional parameter used to request the \&quot;next\&quot; set of results from an API.  The value provided here is most commonly obtained from the &#x60;next_cursor&#x60; field of the previous request.  When no value is provided, the request starts at the beginning of the result set. 
    # @option opts [Time] :since The start of the date range over which you want to search. If not specified, defaults to &#x60;now() - 24 hours&#x60; (past 24 hours)
    # @option opts [Time] :_until The end of the date range over which you want to search. If not specified, defaults to &#x60;now()&#x60;. May not be more than 31 days after &#x60;since&#x60;.
    # @option opts [String] :root_resource_types Resource type filter for the root_resource.
    # @option opts [String] :actor_type Actor type filter.
    # @option opts [String] :actor_id Actor Id filter. Must be qualified by providing the &#x60;actor_type&#x60; param.
    # @option opts [String] :method_type Method type filter.
    # @option opts [String] :method_truncated_token Method truncated_token filter. Must be qualified by providing the &#x60;method_type&#x60; param.
    # @option opts [String] :actions Action filter
    # @return [Array<(AuditRecordResponseSchema, Integer, Hash)>] AuditRecordResponseSchema data, response status code and response headers
    def list_audit_records_with_http_info(accept, content_type, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AuditApi.list_audit_records ...'
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling AuditApi.list_audit_records"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling AuditApi.list_audit_records"
      end
      # verify enum value
      allowable_values = ["application/json"]
      if @api_client.config.client_side_validation && !allowable_values.include?(content_type)
        fail ArgumentError, "invalid value for \"content_type\", must be one of #{allowable_values}"
      end
      allowable_values = ["users", "teams", "schedules", "escalation_policies", "services"]
      if @api_client.config.client_side_validation && opts[:'root_resource_types'] && !allowable_values.include?(opts[:'root_resource_types'])
        fail ArgumentError, "invalid value for \"root_resource_types\", must be one of #{allowable_values}"
      end
      allowable_values = ["user_reference", "api_key_reference", "app_reference"]
      if @api_client.config.client_side_validation && opts[:'actor_type'] && !allowable_values.include?(opts[:'actor_type'])
        fail ArgumentError, "invalid value for \"actor_type\", must be one of #{allowable_values}"
      end
      allowable_values = ["browser", "oauth", "api_token", "identity_provider", "other"]
      if @api_client.config.client_side_validation && opts[:'method_type'] && !allowable_values.include?(opts[:'method_type'])
        fail ArgumentError, "invalid value for \"method_type\", must be one of #{allowable_values}"
      end
      allowable_values = ["create", "update", "delete"]
      if @api_client.config.client_side_validation && opts[:'actions'] && !allowable_values.include?(opts[:'actions'])
        fail ArgumentError, "invalid value for \"actions\", must be one of #{allowable_values}"
      end
      # resource path
      local_var_path = '/audit/records'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'limit'] = opts[:'limit'] if !opts[:'limit'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'since'] = opts[:'since'] if !opts[:'since'].nil?
      query_params[:'until'] = opts[:'_until'] if !opts[:'_until'].nil?
      query_params[:'root_resource_types[]'] = opts[:'root_resource_types'] if !opts[:'root_resource_types'].nil?
      query_params[:'actor_type'] = opts[:'actor_type'] if !opts[:'actor_type'].nil?
      query_params[:'actor_id'] = opts[:'actor_id'] if !opts[:'actor_id'].nil?
      query_params[:'method_type'] = opts[:'method_type'] if !opts[:'method_type'].nil?
      query_params[:'method_truncated_token'] = opts[:'method_truncated_token'] if !opts[:'method_truncated_token'].nil?
      query_params[:'actions[]'] = opts[:'actions'] if !opts[:'actions'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'Accept'] = accept
      header_params[:'Content-Type'] = content_type

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'AuditRecordResponseSchema'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['api_key']

      new_options = opts.merge(
        :operation => :"AuditApi.list_audit_records",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AuditApi#list_audit_records\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
